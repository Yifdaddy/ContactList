{"version":3,"sources":["components/shared/ContactCard.styles.js","components/shared/Popup/Popup.jsx","components/Contact/Person.jsx","pages/Homepage/Homepage.styles.js","pages/Homepage/Homepage.jsx","components/Contact/EditPerson.jsx","components/Contact/AddNewContact.jsx","components/shared/CenteredWrapper.styles.js","App.js","reportWebVitals.js","index.js"],"names":["CardWrapper","styled","div","$isPopup","CardHeader","header","CardHeading","h3","FlexContainer","StyledButton","button","$isDelete","$isGoBack","Popup","open","setOpen","name","handleDelete","onClick","Person","contactInfo","setContacts","history","useHistory","useState","personalInfo","isActive","setIsActive","prev","style","cursor","firstName","lastName","phoneNumber","emailAddress","push","filter","contact","idx","HeaderWrapper","Homepage","contacts","map","EditPerson","useParams","currentPerson","setCurrentPerson","useEffect","person","find","handleOnChange","e","prevPerson","target","value","onSubmit","preventDefault","contactList","htmlFor","onChange","required","goBack","type","disabled","AddNewContact","length","CenteredWrapper","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.232b559a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const CardWrapper = styled.div`\n    overflow: hidden;\n    padding: 0 0 32px;\n    margin: 48px auto 0;\n    width: ${({ $isPopup }) => $isPopup ? '500px' : '300px'};\n    background: ${({ $isPopup }) => $isPopup ? '#fff' : ''};\n    font-family: Quicksand, arial, sans-serif;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.05), 0 0px 40px rgba(0, 0, 0, 0.08);\n    border-radius: 5px;\n    ${({ $isPopup }) => $isPopup &&\n      `\n        position: fixed; \n        top: 35%;\n        left: 35%;\n      `\n    }\n`;\nexport const CardHeader = styled.header`\n    padding-top: 32px;\n    padding-bottom: 32px;\n`;\n\nexport const CardHeading = styled.h3`\n    font-size: 16px;\n    font-weight: bold;\n    text-align: center;\n`;\nexport const CardBody = styled.div`\n    padding-right: 32px;\n    padding-left: 32px;\n`;\nexport const FlexContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`;\nexport const StyledButton = styled.button`\n    height: 36px;\n    width: auto;\n    padding: 0px 8px;\n    margin-left: 8px;\n    background: ${({ $isDelete, $isGoBack }) => $isDelete || $isGoBack ? '#F7B600' : '#1A1F71'};\n    border-color: ${({ $isDelete, $isGoBack }) => $isDelete || $isGoBack ? '#F7B600' : '#1A1F71'};\n    border-radius: 28px;\n    color: #fff;\n    cursor: pointer;\n    &:hover {\n      transform: scale(1.05);\n    }\n`;","import React, { useState } from \"react\";\nimport { \n    CardWrapper,\n    CardHeader,\n    CardHeading,\n    StyledButton,\n    FlexContainer,\n    Modal\n} from 'components/shared/ContactCard.styles.js';\nfunction Popup({ open, setOpen, name, handleDelete}) {\n    const handleCancel = () => {\n        setOpen(false);\n    }\n    return (\n        <>\n            <CardWrapper $isPopup>\n                <CardHeader>\n                    <CardHeading>Are you sure you want to delete</CardHeading>\n                    <CardHeading>{name}</CardHeading>\n                    <FlexContainer>\n                        <StyledButton onClick={handleCancel}>Cancel</StyledButton>\n                        <StyledButton $isDelete onClick={handleDelete}>Confirm</StyledButton>\n                    </FlexContainer>\n                </CardHeader>\n            </CardWrapper>\n        </>\n    );\n}\nexport default Popup;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    CardWrapper,\n    CardHeader,\n    CardHeading,\n    StyledButton,\n    FlexContainer,\n} from 'components/shared/ContactCard.styles.js';\nimport Popup from 'components/shared/Popup/Popup.jsx';\n\nfunction Person({ contactInfo, setContacts }) {\n    const history = useHistory();\n    const [personalInfo, setPersonalInfo] = useState({\n        ...contactInfo\n    });\n    const [isActive, setIsActive] = useState(false);\n    const [open, setOpen] = useState(false);\n    const handleEditClick = () => {\n        history.push(`/edit/${contactInfo.phoneNumber}`);\n    }\n    const handleToggleShowInfo = () => {\n        setIsActive(prev => !prev);\n    }\n    const handleToggleOpen = () => {\n        setOpen((prev) => !prev);\n    }\n    const handleDelete = () => {\n        setContacts(prev => (\n            prev.filter((contact, idx) => contact.phoneNumber !== personalInfo.phoneNumber)\n        ));\n    }\n    return (\n        <>\n            <CardWrapper>\n                <CardHeader>\n                    <CardHeading onClick={handleToggleShowInfo} style={{cursor: \"pointer\"}}>Name: {personalInfo.firstName + \" \" + personalInfo.lastName}</CardHeading>\n                    {isActive && \n                        <>\n                            <CardHeading>Phone: {personalInfo.phoneNumber}</CardHeading>\n                            <CardHeading>Email: {personalInfo.emailAddress}</CardHeading>\n                            <FlexContainer>\n                                <StyledButton onClick={() => {handleEditClick()}}>Edit</StyledButton>\n                                <StyledButton $isDelete onClick={handleToggleOpen}>Delete</StyledButton>\n                            </FlexContainer>\n                        </>\n                    }\n                </CardHeader>\n                \n            </CardWrapper>\n            {\n                open ? \n                    <Popup \n                        open={open} \n                        setOpen={setOpen} \n                        name={personalInfo.firstName + \" \" + personalInfo.lastName} \n                        handleDelete={handleDelete}\n                    /> \n                    : \n                    null\n            }\n        </>\n    )\n}\nexport default Person;","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n    overflow: hidden;\n    margin: 48px auto 0; \n    text-align: center;\n`;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Person from 'components/Contact/Person.jsx';\nimport { StyledButton } from 'components/shared/ContactCard.styles.js';\nimport { HeaderWrapper } from './Homepage.styles';\nfunction Homepage({ contacts, setContacts }) {\n    const history = useHistory();\n    const handleAddNewContact = () => {\n        history.push('/new-contact');\n    }\n    return (\n        <div>\n            <HeaderWrapper>\n                <header>\n                    <h1>Homepage of Contact List</h1>\n                    <br />\n                    <StyledButton onClick={handleAddNewContact}>Add a new contact</StyledButton>\n                </header>\n            </HeaderWrapper>\n            {contacts.map((contact, idx) => {\n                return (\n                    <Person key={contact.phoneNumber} contactInfo={contact} setContacts={setContacts}/>\n                );\n            })}    \n        </div>\n    );\n};\nexport default Homepage;","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n    CardWrapper,\n    CardHeader,\n    CardHeading,\n    StyledButton,\n    FlexContainer,\n} from 'components/shared/ContactCard.styles.js';\n\nfunction EditPerson({ contacts, setContacts}) {\n    const history = useHistory();\n    const { phoneNumber } = useParams();\n    const [currentPerson, setCurrentPerson] = useState({});\n    useEffect(() => {\n        const person = contacts.find((contact, idx) => (contact.phoneNumber === phoneNumber));\n        setCurrentPerson(person);\n    }, [phoneNumber]);\n    const handleOnChange = (e) => {\n        setCurrentPerson(prevPerson => ({\n            ...prevPerson,\n            [e.target.name]: e.target.value,\n        }));\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const contactList = contacts.filter((contact, idx) => (contact.phoneNumber !== phoneNumber));\n        setContacts([...contactList, currentPerson]);\n        history.push('/');\n    }\n    const handleGoBack = () => {\n        history.goBack();\n    }\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <CardWrapper>\n                    <CardHeader>\n                        <CardHeading>\n                            <label htmlFor='firstName'>First Name: {\" \"}</label> \n                            <input value={currentPerson.firstName} name=\"firstName\" onChange={handleOnChange} required/>\n                        </CardHeading>\n                        <CardHeading>\n                            <label htmlFor='lastName'>Last Name: {\" \"}</label> \n                            <input value={currentPerson.lastName} name=\"lastName\" onChange={handleOnChange} required/>\n                        </CardHeading>\n                        <CardHeading>\n                            <label htmlFor='phoneNumber'>Phone: {\" \"}</label> \n                            <input value={currentPerson.phoneNumber} name=\"phoneNumber\" onChange={handleOnChange} required/>\n                        </CardHeading>\n                        <CardHeading>\n                            <label htmlFor='emailAddress'>Email: {\" \"}</label> \n                            <input value={currentPerson.emailAddress} name=\"emailAddress\" onChange={handleOnChange} required/>\n                        </CardHeading>\n                        <FlexContainer>\n                            <StyledButton $isGoBack onClick={handleGoBack}>Back</StyledButton>\n                            <StyledButton \n                                type=\"submit\"\n                                disabled={\n                                    !currentPerson.firstName||\n                                    !currentPerson.lastName ||\n                                    !currentPerson.emailAddress ||\n                                    !currentPerson.phoneNumber\n                                }    \n                            >\n                                Submit\n                            </StyledButton>\n                        </FlexContainer>\n                    </CardHeader>\n                </CardWrapper>\n            </form>\n        </>\n    )\n}\nexport default EditPerson;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n    CardWrapper,\n    CardHeader,\n    CardHeading,\n    StyledButton,\n    FlexContainer,\n} from 'components/shared/ContactCard.styles.js';\n\nfunction AddNewContact({ setContacts }) {\n    const history = useHistory();\n    const [currentPerson, setCurrentPerson] = useState({      \n        firstName: '',      \n        lastName: '',      \n        phoneNumber: '',      \n        emailAddress: ''  \n    });\n    const handleOnChange = (e) => {\n        setCurrentPerson(prevPerson => ({\n            ...prevPerson,\n            [e.target.name]: e.target.value,\n        }));\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setContacts(prev => [...prev, currentPerson]);\n        history.push('/');\n    }\n    const handleGoBack = () => {\n        history.goBack();\n    }\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <CardWrapper>\n                    <CardHeader>\n                        <CardHeading>\n                            <label htmlFor='firstName'>First Name: {\" \"}</label> \n                            <input value={currentPerson.firstName} name=\"firstName\" onChange={handleOnChange} required/>\n                        </CardHeading>\n                        <CardHeading>\n                            <label htmlFor='lastName'>Last Name: {\" \"}</label> \n                            <input value={currentPerson.lastName} name=\"lastName\" onChange={handleOnChange} required/>\n                        </CardHeading>\n                        <CardHeading>\n                            <label htmlFor='phoneNumber'>Phone: {\" \"}</label> \n                            <input value={currentPerson.phoneNumber} name=\"phoneNumber\" onChange={handleOnChange} required/>\n                        </CardHeading>\n                        <CardHeading>\n                            <label htmlFor='emailAddress'>Email: {\" \"}</label> \n                            <input value={currentPerson.emailAddress} name=\"emailAddress\" onChange={handleOnChange} required/>\n                        </CardHeading>\n                        <FlexContainer>\n                            <StyledButton $isGoBack onClick={handleGoBack}>Back</StyledButton>\n                            <StyledButton \n                                type=\"submit\" \n                                disabled={\n                                    currentPerson.firstName.length === 0 ||\n                                    currentPerson.lastName.length === 0 ||\n                                    currentPerson.emailAddress.length === 0 ||\n                                    currentPerson.phoneNumber.length === 0\n                                }\n                            >Submit</StyledButton>\n                        </FlexContainer>\n                    </CardHeader>\n                </CardWrapper>\n            </form>\n        </>\n    )\n}\nexport default AddNewContact;\n","import styled from 'styled-components';\n\nconst CenteredWrapper = styled.div`\n    max-width: 1440px;\n    margin: 0 auto;\n    background: #fff;\n`;\nexport default CenteredWrapper;","import React, { useState } from 'react'; \nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport './App.css';\nimport Homepage from 'pages/Homepage/Homepage';\nimport EditPerson from 'components/Contact/EditPerson';\nimport AddNewContact from 'components/Contact/AddNewContact';\nimport CenteredWrapper from 'components/shared/CenteredWrapper.styles.js';\nconst contactList = [\n  {   \n      firstName: \"noah\", \n      lastName: \"pan\",\n      phoneNumber: \"6824096384\",    \n      emailAddress: \"arkpan@gmail.com\",  \n  }, \n  {      \n      firstName: 'Eric',      \n      lastName: 'Cai',      \n      phoneNumber: \"6825902321\",      \n      emailAddress: 'EricCai@gmail.com'  \n  },  \n  {    \n      firstName: 'Ying',\n      lastName: 'Yuan',    \n      phoneNumber: \"6823212321\",    \n      emailAddress: 'yingYuan@gmail.com'  \n  },  \n  {    \n      firstName: 'Yi',    \n      lastName: 'Wen',    \n      phoneNumber: \"2823212321\",    \n      emailAddress: 'yiwen@gmail.com'  \n  }\n];\nfunction App() {\n  const [contacts, setContacts] = useState(contactList);\n  return (\n      <CenteredWrapper>\n          <Route exact path=\"/\" render={() => <Homepage contacts={contacts} setContacts={setContacts}/>}/>\n          <Route path=\"/edit/:phoneNumber\" render={() => <EditPerson contacts={contacts} setContacts={setContacts}/>} />\n          <Route path=\"/new-contact\" render={() => <AddNewContact setContacts={setContacts} />} />\n      </CenteredWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}